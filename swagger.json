{
  "openapi": "3.0.3",
  "info": {
    "version": "2.0.2",
    "title": "MoneyGuard",
    "description": "Final project GoIT bl_team-1",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "http://localhost:3030"
    },
    {
      "url": "https://moneyguardbackend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    },
    {
      "name": "Statistics",
      "description": "Statistics endpoints"
    },
    {
      "name": "Categories",
      "description": "Categories endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User registration",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email already in use",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User login",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect email or pasword",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Current user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transactions",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Transactions List",
                  "items": {
                    "$ref": "#/components/schemas/TransactionSchema"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Add new transactions",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Ttransaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createTransactionSuccessResponse"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Users transactions list",
                  "items": {
                    "$ref": "#/components/schemas/TransactionSchema"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required field"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "put": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update transaction by ID",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "description": "Transaction ID",
            "schema": {
              "type": "string",
              "example": "628682f56ae1b0812d14a878"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Update transaction",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTransactionSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete transaction by ID",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "description": "Transaction ID",
            "schema": {
              "type": "string",
              "example": "628682f56ae1b0812d14a878"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Getting transaction by ID",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "description": "Transaction ID",
            "schema": {
              "type": "string",
              "example": "628682f56ae1b0812d14a878"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/transactions/statistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get all statistics.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statistics"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "code": {
                      "type": "number",
                      "example": "401"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "number",
                      "example": "500"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get categories",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of categories",
                  "items": {
                    "$ref": "#/components/schemas/CategoriesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "format": "JWT"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "format": "name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's _id",
            "example": "62496a0a7bcc73d5fda678ec"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "name"
          }
        }
      },
      "TransactionSchema": {
        "type": "object",
        "required": [
          "date",
          "category",
          "value"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "transaction id",
            "example": "6128aef7ae8c0635d47093fd"
          },
          "comment": {
            "type": "string",
            "description": "comment to transaction"
          },
          "owner": {
            "type": "string",
            "description": "user's id",
            "example": "61266348626da3337cd530ff"
          },
          "type": {
            "type": "string",
            "description": "type of transaction(spend or income)",
            "default": "income",
            "example": "income"
          },
          "category": {
            "type": "string",
            "description": "category of transaction",
            "example": "Car"
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "example": 1000
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "updateTransactionRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "type of transaction(spend or income)",
            "default": "income",
            "example": "income"
          },
          "category": {
            "type": "string",
            "description": "category of transaction",
            "example": "Education"
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "example": 1000
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "createTransactionSuccessResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Information about created transaction",
            "properties": {
              "id": {
                "type": "string",
                "description": "Transaction ID",
                "example": "6042f456e080193948016539"
              },
              "date": {
                "type": "string",
                "description": "Transaction's date indicated by user",
                "example": "2022-05-17T00:00:00.000Z"
              },
              "income": {
                "type": "boolean",
                "description": "Is transaction income",
                "example": false
              },
              "category": {
                "type": "string",
                "description": "Category of transaction",
                "example": "Beverages"
              },
              "comment": {
                "type": "string",
                "description": "User's comment about transaction",
                "example": "Comment"
              },
              "value": {
                "type": "integer",
                "description": "Sum of transaction",
                "example": 2120
              },
              "createdAt": {
                "type": "string",
                "description": "Date of entry creation",
                "example": "2023-04-10T17:51:48.716Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of entry update",
                "example": "2023-04-10T17:51:48.716Z"
              }
            }
          }
        }
      },
      "CategoriesResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Eat"
          },
          "id": {
            "type": "string",
            "example": "54362576gjhVNHVG87867"
          }
        }
      },
      "Statistics": {
        "type": "object",
        "properties": {
          "totalIncome": {
            "type": "number",
            "example": 8000
          },
          "totalExpenses": {
            "type": "number",
            "example": 5000
          },
          "balance": {
            "type": "number",
            "example": 10000
          },
          "categoryExpenses": {
            "type": "object",
            "example": {
              "name": "car",
              "total": "21569"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}